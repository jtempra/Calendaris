// <auto-generated />
using System;
using Calendaris.Server.Contextes;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Calendaris.Server.Migrations
{
    [DbContext(typeof(CalendarisDbContext))]
    [Migration("20210108215051_inicial")]
    partial class inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Calendaris.Shared.Entities.CalendariFestes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Data")
                        .HasColumnType("Date")
                        .HasColumnName("Data");

                    b.Property<string>("Festa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Festa");

                    b.Property<string>("Observacions")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Observacions");

                    b.Property<int>("Tipus")
                        .HasColumnType("int")
                        .HasColumnName("Tipus");

                    b.HasKey("Id");

                    b.ToTable("CalendarisFestes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Data = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Festa = "Cap d'Any",
                            Tipus = 2
                        },
                        new
                        {
                            Id = 2,
                            Data = new DateTime(2021, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Festa = "Reis",
                            Tipus = 2
                        },
                        new
                        {
                            Id = 3,
                            Data = new DateTime(2021, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Festa = "Divendres Sant",
                            Tipus = 2
                        },
                        new
                        {
                            Id = 4,
                            Data = new DateTime(2021, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Festa = "Dilluns de Pasqua",
                            Tipus = 2
                        },
                        new
                        {
                            Id = 5,
                            Data = new DateTime(2021, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Festa = "Primer de Maig",
                            Tipus = 2
                        },
                        new
                        {
                            Id = 6,
                            Data = new DateTime(2021, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Festa = "Sant Joan",
                            Tipus = 2
                        },
                        new
                        {
                            Id = 7,
                            Data = new DateTime(2021, 9, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Festa = "Diada Nacional de CAT",
                            Tipus = 2
                        },
                        new
                        {
                            Id = 8,
                            Data = new DateTime(2021, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Festa = "Fiesta Nasiona Nyorda",
                            Tipus = 3
                        },
                        new
                        {
                            Id = 9,
                            Data = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Festa = "Tots Sants",
                            Tipus = 2
                        },
                        new
                        {
                            Id = 10,
                            Data = new DateTime(2021, 12, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Festa = "Dia de la Constitucion Nyorda",
                            Tipus = 3
                        },
                        new
                        {
                            Id = 11,
                            Data = new DateTime(2021, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Festa = "La Immaculada",
                            Tipus = 2
                        },
                        new
                        {
                            Id = 12,
                            Data = new DateTime(2021, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Festa = "Nadal",
                            Tipus = 2
                        });
                });

            modelBuilder.Entity("Calendaris.Shared.Entities.CalendariTreballador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Any")
                        .HasColumnType("int")
                        .HasColumnName("Any");

                    b.Property<DateTime>("DataConfeccio")
                        .HasColumnType("Date")
                        .HasColumnName("DataConfeccio");

                    b.Property<string>("Observacions")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Observacions");

                    b.Property<int?>("TreballadorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TreballadorId");

                    b.ToTable("CalendarisTreballador");
                });

            modelBuilder.Entity("Calendaris.Shared.Entities.Conveni", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Codi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Codi");

                    b.Property<DateTime>("DataFinal")
                        .HasColumnType("Date")
                        .HasColumnName("DataFinal");

                    b.Property<DateTime>("DataInici")
                        .HasColumnType("Date")
                        .HasColumnName("DataInici");

                    b.Property<int>("HoresAnuals")
                        .HasColumnType("int")
                        .HasColumnName("HoresAnuals");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Nom");

                    b.Property<string>("Observacions")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Observacions");

                    b.HasKey("Id");

                    b.ToTable("Convenis");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Codi = "79002575012007",
                            DataFinal = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataInici = new DateTime(2020, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HoresAnuals = 1600,
                            Nom = "Acció social amb infants, joves, families i d'altres, en situació de risc"
                        },
                        new
                        {
                            Id = 2,
                            Codi = "79002795012009",
                            DataFinal = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataInici = new DateTime(2014, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HoresAnuals = 1500,
                            Nom = "Associacions per discapacitats"
                        },
                        new
                        {
                            Id = 3,
                            Codi = "79001565011999",
                            DataFinal = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataInici = new DateTime(2019, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HoresAnuals = 1250,
                            Nom = "Centres especials de treballadors disminuits fisics o sensorials de Catalunya"
                        });
                });

            modelBuilder.Entity("Calendaris.Shared.Entities.ConveniTreballador", b =>
                {
                    b.Property<int>("ConveniId")
                        .HasColumnType("int");

                    b.Property<int>("TreballadorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataFinal")
                        .HasColumnType("Date")
                        .HasColumnName("DataFinal");

                    b.Property<DateTime>("DataInici")
                        .HasColumnType("Date")
                        .HasColumnName("DataInici");

                    b.Property<string>("Observacions")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Observacions");

                    b.HasKey("ConveniId", "TreballadorId");

                    b.HasIndex("TreballadorId");

                    b.ToTable("ConvenisTreballador");
                });

            modelBuilder.Entity("Calendaris.Shared.Entities.DetallCalendariTreballador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CalendariTreballadorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataFinal")
                        .HasColumnType("Date")
                        .HasColumnName("DataFinal");

                    b.Property<DateTime>("DataInicial")
                        .HasColumnType("Date")
                        .HasColumnName("DataInicial");

                    b.Property<TimeSpan>("HoraFinal1")
                        .HasColumnType("time")
                        .HasColumnName("HoraFinal1");

                    b.Property<TimeSpan>("HoraFinal2")
                        .HasColumnType("time")
                        .HasColumnName("HoraFinal2");

                    b.Property<TimeSpan>("HoraFinal3")
                        .HasColumnType("time")
                        .HasColumnName("HoraFinal3");

                    b.Property<TimeSpan>("HoraInici1")
                        .HasColumnType("time")
                        .HasColumnName("HoraInici1");

                    b.Property<TimeSpan>("HoraInici2")
                        .HasColumnType("time")
                        .HasColumnName("HoraInici2");

                    b.Property<TimeSpan>("HoraInici3")
                        .HasColumnType("time")
                        .HasColumnName("HoraInici3");

                    b.Property<string>("Observacions")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Observacions");

                    b.Property<bool>("Vacances")
                        .HasColumnType("bit")
                        .HasColumnName("Vacances");

                    b.HasKey("Id");

                    b.HasIndex("CalendariTreballadorId");

                    b.ToTable("DetallsCalendariTreballador");
                });

            modelBuilder.Entity("Calendaris.Shared.Entities.DetallPlantillaCalendari", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DataFinal")
                        .HasColumnType("Date")
                        .HasColumnName("DataFinal");

                    b.Property<DateTime>("DataInicial")
                        .HasColumnType("Date")
                        .HasColumnName("DataInicial");

                    b.Property<TimeSpan>("HoraFinal1")
                        .HasColumnType("time")
                        .HasColumnName("HoraFinal1");

                    b.Property<TimeSpan>("HoraFinal2")
                        .HasColumnType("time")
                        .HasColumnName("HoraFinal2");

                    b.Property<TimeSpan>("HoraFinal3")
                        .HasColumnType("time")
                        .HasColumnName("HoraFinal3");

                    b.Property<TimeSpan>("HoraInici1")
                        .HasColumnType("time")
                        .HasColumnName("HoraInici1");

                    b.Property<TimeSpan>("HoraInici2")
                        .HasColumnType("time")
                        .HasColumnName("HoraInici2");

                    b.Property<TimeSpan>("HoraInici3")
                        .HasColumnType("time")
                        .HasColumnName("HoraInici3");

                    b.Property<string>("Observacions")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Observacions");

                    b.Property<int>("PlantillaCalendariId")
                        .HasColumnType("int");

                    b.Property<bool>("Vacances")
                        .HasColumnType("bit")
                        .HasColumnName("Vacances");

                    b.HasKey("Id");

                    b.HasIndex("PlantillaCalendariId");

                    b.ToTable("DetallsPlantillaCalendari");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataFinal = new DateTime(2021, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataInicial = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HoraFinal1 = new TimeSpan(0, 13, 0, 0, 0),
                            HoraFinal2 = new TimeSpan(0, 19, 0, 0, 0),
                            HoraFinal3 = new TimeSpan(0, 0, 0, 0, 0),
                            HoraInici1 = new TimeSpan(0, 7, 0, 0, 0),
                            HoraInici2 = new TimeSpan(0, 15, 0, 0, 0),
                            HoraInici3 = new TimeSpan(0, 0, 0, 0, 0),
                            Observacions = "tram1",
                            PlantillaCalendariId = 1,
                            Vacances = false
                        },
                        new
                        {
                            Id = 2,
                            DataFinal = new DateTime(2021, 8, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataInicial = new DateTime(2021, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HoraFinal1 = new TimeSpan(0, 0, 0, 0, 0),
                            HoraFinal2 = new TimeSpan(0, 0, 0, 0, 0),
                            HoraFinal3 = new TimeSpan(0, 0, 0, 0, 0),
                            HoraInici1 = new TimeSpan(0, 0, 0, 0, 0),
                            HoraInici2 = new TimeSpan(0, 0, 0, 0, 0),
                            HoraInici3 = new TimeSpan(0, 0, 0, 0, 0),
                            Observacions = "tram vacances",
                            PlantillaCalendariId = 1,
                            Vacances = true
                        },
                        new
                        {
                            Id = 3,
                            DataFinal = new DateTime(2021, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataInicial = new DateTime(2021, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HoraFinal1 = new TimeSpan(0, 13, 0, 0, 0),
                            HoraFinal2 = new TimeSpan(0, 19, 0, 0, 0),
                            HoraFinal3 = new TimeSpan(0, 0, 0, 0, 0),
                            HoraInici1 = new TimeSpan(0, 7, 0, 0, 0),
                            HoraInici2 = new TimeSpan(0, 15, 0, 0, 0),
                            HoraInici3 = new TimeSpan(0, 0, 0, 0, 0),
                            Observacions = "tram tram2",
                            PlantillaCalendariId = 1,
                            Vacances = true
                        });
                });

            modelBuilder.Entity("Calendaris.Shared.Entities.PlantillaCalendari", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("DataFinal")
                        .HasColumnType("Date")
                        .HasColumnName("DataFinal");

                    b.Property<DateTime>("DataInici")
                        .HasColumnType("Date")
                        .HasColumnName("DataInici");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacions")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Observacions");

                    b.Property<int?>("TreballadorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TreballadorId");

                    b.ToTable("PlantillesCalendari");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataInici = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nom = "Plantilla1",
                            Observacions = "Plantilla 1"
                        },
                        new
                        {
                            Id = 2,
                            DataInici = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nom = "Plantilla2",
                            Observacions = "Plantilla 2"
                        });
                });

            modelBuilder.Entity("Calendaris.Shared.Entities.Treballador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Adreça")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Adreça");

                    b.Property<string>("CP")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("CP");

                    b.Property<int>("Centre")
                        .HasColumnType("int");

                    b.Property<string>("Codi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Codi");

                    b.Property<DateTime>("DataAlta")
                        .HasColumnType("Date")
                        .HasColumnName("DataAlta");

                    b.Property<DateTime?>("DataBaixa")
                        .HasColumnType("Date")
                        .HasColumnName("DataBaixa");

                    b.Property<int>("Departament")
                        .HasColumnType("int");

                    b.Property<string>("Email1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Email1");

                    b.Property<string>("Email2")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Email2");

                    b.Property<string>("Email3")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Email3");

                    b.Property<string>("Mobil1")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("Mobil1");

                    b.Property<string>("Mobil2")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("Mobil2");

                    b.Property<string>("Mobil3")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("Mobil3");

                    b.Property<string>("NIF")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("NIF");

                    b.Property<string>("NSS")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("NSS");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nom");

                    b.Property<string>("Observacions")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Observacions");

                    b.Property<string>("Poblacio")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Poblacio");

                    b.Property<string>("PrimerCognom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PrimerCognom");

                    b.Property<string>("Provincia")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Provincia");

                    b.Property<string>("SegonCognom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("SegonCognom");

                    b.Property<string>("Telefon1")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("Telefon1");

                    b.Property<string>("Telefon2")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("Telefon2");

                    b.Property<string>("Telefon3")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("Telefon3");

                    b.HasKey("Id");

                    b.ToTable("Treballadors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adreça = "Carrer Badal, 45",
                            CP = "08000",
                            Centre = 0,
                            Codi = "T1",
                            DataAlta = new DateTime(2010, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Departament = 1,
                            Email1 = "jlopez@terra.es",
                            Mobil1 = "600102030",
                            NIF = "77653456A",
                            NSS = "081234567890",
                            Nom = "Joan",
                            Poblacio = "Barcelona",
                            PrimerCognom = "Lopez",
                            Provincia = "Barcelona",
                            SegonCognom = "Teclas",
                            Telefon1 = "938065434"
                        },
                        new
                        {
                            Id = 2,
                            Adreça = "Calle los Mañicos, 56",
                            CP = "50000",
                            Centre = 2,
                            Codi = "T2",
                            DataAlta = new DateTime(2010, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Departament = 1,
                            Email1 = "jgvacas@gmail.com",
                            Mobil1 = "600102030",
                            NIF = "67345768B",
                            NSS = "501234567890",
                            Nom = "Julia",
                            Poblacio = "Zaragoza",
                            PrimerCognom = "Garcia",
                            Provincia = "Zaragoza",
                            SegonCognom = "Vacas",
                            Telefon1 = "976436574"
                        },
                        new
                        {
                            Id = 3,
                            Adreça = "Carrer de les Falles",
                            CP = "46000",
                            Centre = 1,
                            Codi = "T3",
                            DataAlta = new DateTime(2010, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Departament = 1,
                            Email1 = "ramirr@gmail.com",
                            Mobil1 = "600102030",
                            NIF = "19463891C",
                            NSS = "461234567890",
                            Nom = "Ramir",
                            Poblacio = "Valencia",
                            PrimerCognom = "Rodriguez",
                            Provincia = "Valencia",
                            SegonCognom = "Samuel",
                            Telefon1 = "966543546"
                        },
                        new
                        {
                            Id = 4,
                            Adreça = "Avinguda Europa, 123-4rt-5ª",
                            CP = "08000",
                            Centre = 0,
                            Codi = "T4",
                            DataAlta = new DateTime(2010, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Departament = 5,
                            Email1 = "aporrata@hotmail.com",
                            Mobil1 = "600102030",
                            NIF = "47586923D",
                            NSS = "088934675421",
                            Nom = "Angel",
                            Poblacio = "Barcelona",
                            PrimerCognom = "Porrata",
                            Provincia = "Barcelona",
                            SegonCognom = "Pesarrodona",
                            Telefon1 = "938065434"
                        },
                        new
                        {
                            Id = 5,
                            Adreça = "Carrer de Gaudi, 56-1",
                            CP = "08000",
                            Centre = 0,
                            Codi = "T5",
                            DataAlta = new DateTime(2010, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Departament = 3,
                            Email1 = "isasanti@gmail.com",
                            Mobil1 = "600102030",
                            NIF = "79583452E",
                            NSS = "084578695473",
                            Nom = "Isabel",
                            Poblacio = "Barcelona",
                            PrimerCognom = "Santisteban",
                            Provincia = "Barcelona",
                            SegonCognom = "Junqueres",
                            Telefon1 = "938065434"
                        },
                        new
                        {
                            Id = 6,
                            Adreça = "Carretera de les Aigues s/n",
                            CP = "08000",
                            Centre = 0,
                            Codi = "T6",
                            DataAlta = new DateTime(2010, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Departament = 6,
                            Email1 = "mpoltre@fcat.cat",
                            Mobil1 = "600102030",
                            NIF = "89562854F",
                            NSS = "086736593712",
                            Nom = "Maria",
                            Poblacio = "Barcelona",
                            PrimerCognom = "Poltre",
                            Provincia = "Barcelona",
                            SegonCognom = "Patrixol",
                            Telefon1 = "938065434"
                        },
                        new
                        {
                            Id = 7,
                            Adreça = "Passeig Sant Joan, 23-Atic",
                            CP = "08000",
                            Centre = 0,
                            Codi = "T7",
                            DataAlta = new DateTime(2010, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Departament = 2,
                            Email1 = "mmassanes@terra.es",
                            Mobil1 = "600102030",
                            NIF = "10694825G",
                            NSS = "080898786757",
                            Nom = "Montse",
                            Poblacio = "Barcelona",
                            PrimerCognom = "Massanes",
                            Provincia = "Barcelona",
                            SegonCognom = "Ameba",
                            Telefon1 = "938065434"
                        },
                        new
                        {
                            Id = 8,
                            Adreça = "Carrer Petrixol, 34",
                            CP = "08000",
                            Centre = 0,
                            Codi = "T8",
                            DataAlta = new DateTime(2010, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Departament = 4,
                            Email1 = "Ignasic@diba.cat",
                            Mobil1 = "600102030",
                            NIF = "69372517H",
                            NSS = "085647987809",
                            Nom = "Ignasi",
                            Poblacio = "Barcelona",
                            PrimerCognom = "Codina",
                            Provincia = "Barcelona",
                            SegonCognom = "Pujol",
                            Telefon1 = "938065434"
                        },
                        new
                        {
                            Id = 9,
                            Adreça = "Carrer Industria 88-4-4",
                            CP = "08000",
                            Centre = 0,
                            Codi = "T9",
                            DataAlta = new DateTime(2010, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Departament = 3,
                            Email1 = "hectorruc@gmail.com",
                            Mobil1 = "600102030",
                            NIF = "90785940I",
                            NSS = "083425475900",
                            Nom = "Hector",
                            Poblacio = "Barcelona",
                            PrimerCognom = "Rucol",
                            Provincia = "Barcelona",
                            SegonCognom = "Broquil",
                            Telefon1 = "938065434"
                        },
                        new
                        {
                            Id = 10,
                            Adreça = "Plaça del Pes de la Palla 4-1",
                            CP = "08000",
                            Centre = 0,
                            Codi = "T10",
                            DataAlta = new DateTime(2010, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Departament = 2,
                            Email1 = "vbascara@ffc.com",
                            Mobil1 = "600102030",
                            NIF = "80583760J",
                            NSS = "080808786757",
                            Nom = "Victor",
                            Poblacio = "Barcelona",
                            PrimerCognom = "Bascara",
                            Provincia = "Barcelona",
                            SegonCognom = "Costa",
                            Telefon1 = "938065434"
                        });
                });

            modelBuilder.Entity("Calendaris.Shared.Entities.CalendariTreballador", b =>
                {
                    b.HasOne("Calendaris.Shared.Entities.Treballador", "Treballador")
                        .WithMany()
                        .HasForeignKey("TreballadorId");

                    b.Navigation("Treballador");
                });

            modelBuilder.Entity("Calendaris.Shared.Entities.ConveniTreballador", b =>
                {
                    b.HasOne("Calendaris.Shared.Entities.Conveni", "Conveni")
                        .WithMany("Convenistreballador")
                        .HasForeignKey("ConveniId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Calendaris.Shared.Entities.Treballador", "Treballador")
                        .WithMany("ConvenisTreballador")
                        .HasForeignKey("TreballadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conveni");

                    b.Navigation("Treballador");
                });

            modelBuilder.Entity("Calendaris.Shared.Entities.DetallCalendariTreballador", b =>
                {
                    b.HasOne("Calendaris.Shared.Entities.CalendariTreballador", "CalendariTreballador")
                        .WithMany("DetallCalendariTreballador")
                        .HasForeignKey("CalendariTreballadorId");

                    b.Navigation("CalendariTreballador");
                });

            modelBuilder.Entity("Calendaris.Shared.Entities.DetallPlantillaCalendari", b =>
                {
                    b.HasOne("Calendaris.Shared.Entities.PlantillaCalendari", "PlantillaCalendari")
                        .WithMany("DetallsPlantillaCalendari")
                        .HasForeignKey("PlantillaCalendariId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlantillaCalendari");
                });

            modelBuilder.Entity("Calendaris.Shared.Entities.PlantillaCalendari", b =>
                {
                    b.HasOne("Calendaris.Shared.Entities.Treballador", "Treballador")
                        .WithMany("PlantillaCalendari")
                        .HasForeignKey("TreballadorId");

                    b.Navigation("Treballador");
                });

            modelBuilder.Entity("Calendaris.Shared.Entities.CalendariTreballador", b =>
                {
                    b.Navigation("DetallCalendariTreballador");
                });

            modelBuilder.Entity("Calendaris.Shared.Entities.Conveni", b =>
                {
                    b.Navigation("Convenistreballador");
                });

            modelBuilder.Entity("Calendaris.Shared.Entities.PlantillaCalendari", b =>
                {
                    b.Navigation("DetallsPlantillaCalendari");
                });

            modelBuilder.Entity("Calendaris.Shared.Entities.Treballador", b =>
                {
                    b.Navigation("ConvenisTreballador");

                    b.Navigation("PlantillaCalendari");
                });
#pragma warning restore 612, 618
        }
    }
}
