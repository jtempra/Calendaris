// <auto-generated />
using System;
using Calendaris.Server.Contextes;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Calendaris.Server.Migrations
{
    [DbContext(typeof(CalendarisDbContext))]
    [Migration("20201222112208_inicial")]
    partial class inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Calendaris.Shared.Entities.CalendariFestes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Data")
                        .HasColumnType("Date")
                        .HasColumnName("Data");

                    b.Property<string>("Festa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Festa");

                    b.Property<string>("Observacions")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Observacions");

                    b.Property<int>("Tipus")
                        .HasColumnType("int")
                        .HasColumnName("Tipus");

                    b.HasKey("Id");

                    b.ToTable("CalendarisFestes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Data = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Festa = "Cap d'Any",
                            Tipus = 2
                        },
                        new
                        {
                            Id = 2,
                            Data = new DateTime(2021, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Festa = "Reis",
                            Tipus = 2
                        },
                        new
                        {
                            Id = 3,
                            Data = new DateTime(2021, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Festa = "Divendres Sant",
                            Tipus = 2
                        },
                        new
                        {
                            Id = 4,
                            Data = new DateTime(2021, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Festa = "Dilluns de Pasqua",
                            Tipus = 2
                        },
                        new
                        {
                            Id = 5,
                            Data = new DateTime(2021, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Festa = "Primer de Maig",
                            Tipus = 2
                        },
                        new
                        {
                            Id = 6,
                            Data = new DateTime(2021, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Festa = "Sant Joan",
                            Tipus = 2
                        },
                        new
                        {
                            Id = 7,
                            Data = new DateTime(2021, 9, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Festa = "Diada Nacional de CAT",
                            Tipus = 2
                        },
                        new
                        {
                            Id = 8,
                            Data = new DateTime(2021, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Festa = "Fiesta Nasiona Nyorda",
                            Tipus = 3
                        },
                        new
                        {
                            Id = 9,
                            Data = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Festa = "Tots Sants",
                            Tipus = 2
                        },
                        new
                        {
                            Id = 10,
                            Data = new DateTime(2021, 12, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Festa = "Dia de la Constitucion Nyorda",
                            Tipus = 3
                        },
                        new
                        {
                            Id = 11,
                            Data = new DateTime(2021, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Festa = "La Immaculada",
                            Tipus = 2
                        },
                        new
                        {
                            Id = 12,
                            Data = new DateTime(2021, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Festa = "Nadal",
                            Tipus = 2
                        });
                });

            modelBuilder.Entity("Calendaris.Shared.Entities.CalendariTreballador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Any")
                        .HasColumnType("int")
                        .HasColumnName("Any");

                    b.Property<DateTime>("DataConfeccio")
                        .HasColumnType("Date")
                        .HasColumnName("DataConfeccio");

                    b.Property<string>("Observacions")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Observacions");

                    b.Property<int?>("TreballadorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TreballadorId");

                    b.ToTable("CalendarisTreballador");
                });

            modelBuilder.Entity("Calendaris.Shared.Entities.Conveni", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Codi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Codi");

                    b.Property<DateTime>("DataFinal")
                        .HasColumnType("Date")
                        .HasColumnName("DataFinal");

                    b.Property<DateTime>("DataInici")
                        .HasColumnType("Date")
                        .HasColumnName("DataInici");

                    b.Property<int>("HoresAnuals")
                        .HasColumnType("int")
                        .HasColumnName("HoresAnuals");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Nom");

                    b.Property<string>("Observacions")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Observacions");

                    b.HasKey("Id");

                    b.ToTable("Convenis");
                });

            modelBuilder.Entity("Calendaris.Shared.Entities.ConveniTreballador", b =>
                {
                    b.Property<int>("ConveniId")
                        .HasColumnType("int");

                    b.Property<int>("TreballadorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataFinal")
                        .HasColumnType("Date")
                        .HasColumnName("DataFinal");

                    b.Property<DateTime>("DataInici")
                        .HasColumnType("Date")
                        .HasColumnName("DataInici");

                    b.Property<string>("Observacions")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Observacions");

                    b.HasKey("ConveniId", "TreballadorId");

                    b.HasIndex("TreballadorId");

                    b.ToTable("ConvenisTreballador");
                });

            modelBuilder.Entity("Calendaris.Shared.Entities.DetallCalendariTreballador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CalendariTreballadorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataFinal")
                        .HasColumnType("Date")
                        .HasColumnName("DataFinal");

                    b.Property<DateTime>("DataInicial")
                        .HasColumnType("Date")
                        .HasColumnName("DataInicial");

                    b.Property<DateTime>("HoraFinal1")
                        .HasColumnType("DateTime")
                        .HasColumnName("HoraFinal1");

                    b.Property<DateTime>("HoraFinal2")
                        .HasColumnType("DateTime")
                        .HasColumnName("HoraFinal2");

                    b.Property<DateTime>("HoraFinal3")
                        .HasColumnType("DateTime")
                        .HasColumnName("HoraFinal3");

                    b.Property<DateTime>("HoraInici1")
                        .HasColumnType("DateTime")
                        .HasColumnName("HoraInici1");

                    b.Property<DateTime>("HoraInici2")
                        .HasColumnType("DateTime")
                        .HasColumnName("HoraInici2");

                    b.Property<DateTime>("HoraInici3")
                        .HasColumnType("DateTime")
                        .HasColumnName("HoraInici3");

                    b.Property<string>("Observacions")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Observacions");

                    b.Property<bool>("Vacances")
                        .HasColumnType("bit")
                        .HasColumnName("Vacances");

                    b.HasKey("Id");

                    b.HasIndex("CalendariTreballadorId");

                    b.ToTable("DetallsCalendariTreballador");
                });

            modelBuilder.Entity("Calendaris.Shared.Entities.DetallPlantillaCalendari", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DataFinal")
                        .HasColumnType("Date")
                        .HasColumnName("DataFinal");

                    b.Property<DateTime>("DataInicial")
                        .HasColumnType("Date")
                        .HasColumnName("DataInicial");

                    b.Property<DateTime>("HoraFinal1")
                        .HasColumnType("DateTime")
                        .HasColumnName("HoraFinal1");

                    b.Property<DateTime>("HoraFinal2")
                        .HasColumnType("DateTime")
                        .HasColumnName("HoraFinal2");

                    b.Property<DateTime>("HoraFinal3")
                        .HasColumnType("DateTime")
                        .HasColumnName("HoraFinal3");

                    b.Property<DateTime>("HoraInici1")
                        .HasColumnType("DateTime")
                        .HasColumnName("HoraInici1");

                    b.Property<DateTime>("HoraInici2")
                        .HasColumnType("DateTime")
                        .HasColumnName("HoraInici2");

                    b.Property<DateTime>("HoraInici3")
                        .HasColumnType("DateTime")
                        .HasColumnName("HoraInici3");

                    b.Property<string>("Observacions")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Observacions");

                    b.Property<int?>("PlantillaCalendariId")
                        .HasColumnType("int");

                    b.Property<bool>("Vacances")
                        .HasColumnType("bit")
                        .HasColumnName("Vacances");

                    b.HasKey("Id");

                    b.HasIndex("PlantillaCalendariId");

                    b.ToTable("DetallsPlantillaCalendari");
                });

            modelBuilder.Entity("Calendaris.Shared.Entities.PlantillaCalendari", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("DataFinal")
                        .HasColumnType("Date")
                        .HasColumnName("DataFinal");

                    b.Property<DateTime>("DataInici")
                        .HasColumnType("Date")
                        .HasColumnName("DataInici");

                    b.Property<string>("Observacions")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Observacions");

                    b.Property<int?>("TreballadorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TreballadorId");

                    b.ToTable("PlantillesCalendari");
                });

            modelBuilder.Entity("Calendaris.Shared.Entities.Treballador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Adreça")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Adreça");

                    b.Property<string>("CP")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("CP");

                    b.Property<int>("Centre")
                        .HasColumnType("int");

                    b.Property<string>("Codi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Codi");

                    b.Property<DateTime>("DataAlta")
                        .HasColumnType("Date")
                        .HasColumnName("DataAlta");

                    b.Property<DateTime?>("DataBaixa")
                        .HasColumnType("Date")
                        .HasColumnName("DataBaixa");

                    b.Property<int>("Departament")
                        .HasColumnType("int");

                    b.Property<string>("Email1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Email1");

                    b.Property<string>("Email2")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Email2");

                    b.Property<string>("Email3")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Email3");

                    b.Property<string>("Mobil1")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("Mobil1");

                    b.Property<string>("Mobil2")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("Mobil2");

                    b.Property<string>("Mobil3")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("Mobil3");

                    b.Property<string>("NIF")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("NIF");

                    b.Property<string>("NSS")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("NSS");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nom");

                    b.Property<string>("Observacions")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Observacions");

                    b.Property<string>("Poblacio")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Poblacio");

                    b.Property<string>("PrimerCognom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PrimerCognom");

                    b.Property<string>("Provincia")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Provincia");

                    b.Property<string>("SegonCognom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("SegonCognom");

                    b.Property<string>("Telefon1")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("Telefon1");

                    b.Property<string>("Telefon2")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("Telefon2");

                    b.Property<string>("Telefon3")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("Telefon3");

                    b.HasKey("Id");

                    b.ToTable("Treballadors");
                });

            modelBuilder.Entity("Calendaris.Shared.Entities.CalendariTreballador", b =>
                {
                    b.HasOne("Calendaris.Shared.Entities.Treballador", "Treballador")
                        .WithMany()
                        .HasForeignKey("TreballadorId");

                    b.Navigation("Treballador");
                });

            modelBuilder.Entity("Calendaris.Shared.Entities.ConveniTreballador", b =>
                {
                    b.HasOne("Calendaris.Shared.Entities.Conveni", "Conveni")
                        .WithMany("Convenistreballador")
                        .HasForeignKey("ConveniId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Calendaris.Shared.Entities.Treballador", "Treballador")
                        .WithMany("ConvenisTreballador")
                        .HasForeignKey("TreballadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conveni");

                    b.Navigation("Treballador");
                });

            modelBuilder.Entity("Calendaris.Shared.Entities.DetallCalendariTreballador", b =>
                {
                    b.HasOne("Calendaris.Shared.Entities.CalendariTreballador", "CalendariTreballador")
                        .WithMany("DetallCalendariTreballador")
                        .HasForeignKey("CalendariTreballadorId");

                    b.Navigation("CalendariTreballador");
                });

            modelBuilder.Entity("Calendaris.Shared.Entities.DetallPlantillaCalendari", b =>
                {
                    b.HasOne("Calendaris.Shared.Entities.PlantillaCalendari", "PlantillaCalendari")
                        .WithMany("DetallsPlantillaCalendari")
                        .HasForeignKey("PlantillaCalendariId");

                    b.Navigation("PlantillaCalendari");
                });

            modelBuilder.Entity("Calendaris.Shared.Entities.PlantillaCalendari", b =>
                {
                    b.HasOne("Calendaris.Shared.Entities.Treballador", "Treballador")
                        .WithMany("PlantillaCalendari")
                        .HasForeignKey("TreballadorId");

                    b.Navigation("Treballador");
                });

            modelBuilder.Entity("Calendaris.Shared.Entities.CalendariTreballador", b =>
                {
                    b.Navigation("DetallCalendariTreballador");
                });

            modelBuilder.Entity("Calendaris.Shared.Entities.Conveni", b =>
                {
                    b.Navigation("Convenistreballador");
                });

            modelBuilder.Entity("Calendaris.Shared.Entities.PlantillaCalendari", b =>
                {
                    b.Navigation("DetallsPlantillaCalendari");
                });

            modelBuilder.Entity("Calendaris.Shared.Entities.Treballador", b =>
                {
                    b.Navigation("ConvenisTreballador");

                    b.Navigation("PlantillaCalendari");
                });
#pragma warning restore 612, 618
        }
    }
}
