@page "/festes"
@inject IRepositori repositori

<h3>Festes</h3>

<small>Pàgina per treballar amb les festes</small>

<div class="form-group">
    <a class="btn btn-success" href="festes/crear"><i class="oi oi-plus"></i> Crear Festa</a>
</div>

<br>
@if (festesCalendari == null)
{
    <text>Carregant...</text>
}
else if (festesCalendari.Count == 0)
{
    <text>No Records Found.</text>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Id</th>
                <th>Data</th>
                <th>Festa</th>
                <th>Tipus</th>
                <th>Observacions</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (CalendariFestes fes in festesCalendari)
            {
                <tr>
                    <td>@fes.Id</td>
                    <td>@fes.Data</td>
                    <td>@fes.Festa</td>
                    <td>@fes.Tipus</td>
                    <td>@fes.Observacions</td>
                    <td>
                        <a class="btn btn-success" href="festes/editar/@fes.Id">Editar</a>
                        <button class="btn btn-danger" @onclick="@(() => EsborrarFesta(fes))">Esborrar</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@code {
    List<CalendariFestes> festesCalendari { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await CarregarFestes();
    }

    private async Task CarregarFestes()
    {
        var responseHttp = await repositori.Get<List<CalendariFestes>>("api/festes");
        if (!responseHttp.Error)
        {
            festesCalendari = responseHttp.Response;
        }
    }

    private async Task EsborrarFesta(CalendariFestes fest)
    {
        var responseHttp = await repositori.Delete($"api/festes/{fest.Id}");
        if (responseHttp.Error)
        {
            //await mostrarMensajes.MostrarMensajeError(await responseHttp.GetBody());
        }
        else
        {
            await CarregarFestes();
        }

    }

}